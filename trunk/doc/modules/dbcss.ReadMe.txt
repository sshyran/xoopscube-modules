===  DBCSS (管理画面上でスタイルシートを編集できるようにするモジュール)  ===

管理画面上でスタイルシートを編集できるようにする Duplicatable V3 (D3) 対応モジュールです。

このモジュールには、次のような機能があります。

- GIJOE さんの代替システムモジュール altsys と同様の操作性でスタイルシートを編集できる
- ブロック管理で、任意のページにスタイルシートを適用できる
- CSSファイルをDBテンプレートとして簡単にインポートすることが可能
- このモジュールで編集したスタイルシートを CSSファイルとしてエクスポートすることが可能
- モジュール毎に METAタグを編集・設定できる
- もちろん、D3 モジュールなので、公開側のディレクトリ名は好きな名前で、複数インストール可能

なお、このモジュールを利用するには、あらかじめ XOOPS_TRUST_PATH を設定し、altsys をインストールする必要があります。

また、このモジュールは、GIJOE さんの altsys 、hodaka さんの d3blog のソースコードを参考にさせていただき、作成しました。

【インストール手順】

※ (1) 〜 (5) は、すでに行っていれば、省略して構いません。

(1) まず、XOOPS_TRUST_PATH 用のディレクトリを作ります。

※ できるだけ、DocumentRoot の外にディレクトリを作るといいでしょう。
   例) /home/yourhome/xoops_trust_path/

(2) そのディレクトリのフルパスを mainfile.php に記述します。

※ 記述例 define('XOOPS_TRUST_PATH','/home/yourhome/xoops_trust_path');

※ XOOPS Cube Legacy 2.1 の場合は、mainfile.php の 39行目あたりに、define('XOOPS_TRUST_PATH', ''); とありますので、ここにフルパスで記述します。

※ XOOPS 2.0 の場合は、XOOPS_URL定義行の直後に記述するといいでしょう。

(3) 先に、altsysモジュール（v0.55以上）をインストールしておきます。

(4) XOOPS_TRUST_PATH の 下に、modulesディレクトリを作ります。(XOOPS_TRUST_PATH/modules/)

(5) XOOPS_TRUST_PATH の 下に、cache ディレクトリを作り、書込を許可します。(XOOPS_TRUST_PATH/cache/)

(6) XOOPS_TRUST_PATH の 下に、uploads ディレクトリを作り、書込を許可します。(XOOPS_TRUST_PATH/uploads/)

(7) アーカイブを展開し、xoops_trust_path/uploads/dbcss/common.css を編集します。

※ 他のモジュールとは違って、テンプレートは空っぽの状態になっていますので、まずご自身で好きなように編集してください。
※ common.css を別の名前(例 mycommon.css)でコピーし、そのファイルを編集するようにすると、アップデート時に上書きされませんので、お勧めです。

(8) html/modules/dbcss を html/moduels の下にコピーします。

※ "dbcss"というディレクトリ名は自由に変更することができます。

(9) アーカイブのxoops_trust_path/modules/dbcss を XOOPS_TRUST_PATH/modules/にコピーします。

※ この"dbcss"というディレクトリ名は変更しないでください。

(10) アーカイブのxoops_trust_path/uploads/dbcss を XOOPS_TRUST_PATH/uploads/にコピーし、書き込みを許可します。

※ html/modules/dbcss を別の名前にした場合は、その名前に合わせて、ディレクトリ名を変更してください。
※ 例 ディレクトリ名を xoops_trust_path/uploads/mycss に変更(mycssというディレクトリにした場合)

(11) 管理画面で、インストール操作をしてください。

※ XOOPS Cube Legacy 2.1 の場合は、「互換モジュール > モジュールのインストール」のページを開き、インストール。

※ XOOPS 2.0 の場合は、「システム管理 > モジュール管理」のページを開き、インストール。

(12) このモジュールの管理画面「一般設定」で、デフォルトにするテンプレート名の設定を確認します。

※ common.css を別の名前でコピーして編集した場合は、そのファイル名を記入のうえ、「送信」を押してください。
※ 例 'mycommon.css' と記入(mycommon.css という名前で保存した場合)

(13) このモジュールの管理画面「ブロック管理/アクセス管理」で、ブロックの設定とアクセス権限の設定をしてください。

※ ブロック管理で設定したページ、アクセス権限で設定したグループにのみ、CSS が有効になります。

【デフォルトにするテンプレート名】

このモジュールは、デフォルトの状態では、DB に common.css という名前で保存されたテンプレートをスタイルシートとして使いますが、一般設定で、任意のテンプレートを設定することもできます。

【モジュール用CSSのURI の設定】

このモジュールは、DB に保存されたテンプレートだけでなく、任意の CSSファイルをスタイルシートとして利用することができます。

また、一般設定で、デフォルトの CSSファイルを設定することができます。

デフォルトの CSSファイルを設定する場合は、その CSSファイルの URI を相対パスまたは絶対パスで指定してください。

一般設定では、{mod_url}、<{$mod_url}>、<{$mydirname}>、{X_SITEURL}、<{$xoops_url}> でパスを指定することができます。

【スタイルシート用ブロックについて】

このモジュールには、スタイルシート用に次の 2種類のブロックがあります。

ブロックは複製可能で、複製したブロック毎にブロックオプションを設定することができます。

1. DBスタイルシートフックブロック - DB に保存したスタイルシートを設定できるブロック

※ ブロックオプションで、使用するテンプレート名を指定することができます。

2. スタイルシートフックブロック - DB に保存されていないスタイルシートを設定できるブロック

※ ブロックオプションで、CSSファイルの URI を相対パスまたは絶対パスで指定することができます。

※ ブロックオプションを設定していないデフォルトの状態では、一般設定の設定が適用されます。

【CSSインポート機能について】

「CSSインポート機能」を利用すると、CSSファイルをDBテンプレートとしてインポートすることができます。

インポートしたCSSファイルは defaultテンプレートセットに保存されます。

また、defaultに加え、任意のテンプレートセットを選択して、同時にインポートすることも可能です。

※ この機能を利用する場合は、xoops_trust_path/uploads/dbcss ディレクトリに書込属性を設定する必要があります。
※ html/modules/dbcss を別の名前にした場合は、その名前に合わせて、ディレクトリ名を変更してください。
※ 例 ディレクトリ名を xoops_trust_path/uploads/mycss に変更(mycssというディレクトリにした場合)

【CSSエクスポート機能について】

「CSSエクスポート機能」を利用すると、DBに保存・編集したスタイルシートを CSSファイルとしてエクスポートすることができます。

スタイルシートの編集だけをこのモジュールを使って行い、通常は CSSファイルを利用するという使い方も可能です。

なお、この機能を利用する場合は、一般設定でエクスポート先のディレクトリを設定し、そのディレクトリに書込属性を設定する必要があります。

また、テンプレート毎にディレクトリを設定し、エクスポートすることも可能です。

※ エクスポート先ディレクトリの設定例 : common/css/    (最初の '/' は不要、最後の '/' は必要です)

【CSS内での相対パスについて】

背景画像などに、相対パスを使って URLを指定する場合は、html/modules/dbcss/ を起点として、相対パスを指定する必要があります。

【xoops_module_header へのアサインについて】

このモジュールは、theme.html に <{$xoops_module_header}> が記述されていることを前提に動作します。たいていの theme.html には <{$xoops_module_header}> が記述されているかと思いますが、もし無ければ ＜head＞内に <{$xoops_module_header}> を記述したうえでお使いください。

【xoops_block_header へのアサインについて】
使用しているモジュールによっては、<{$xoops_module_header}>にスタイルシートをうまくアサインできない場合があります。

その場合は、ブロックオプションで、「xoops_block_headerにアサインする」を有効にしてお試しください。

ただし、このオプションを設定した場合は、theme.html のメタヘッド内に <{$xoops_block_header}>を記述する必要があります。

<{$xoops_module_header}>
<{$xoops_block_header}>

※ <{$xoops_module_header}> に続いて、<{$xoops_block_header}> を記述します。

【METAタグの設定について】
「METAタグ管理」で、モジュール毎に、次の 5種類の METAタグを編集・設定することができます。

- METAキーワード
- METAタグ(Description)
- METAタグ(ROBOTS)
- METAタグ(RATING)
- METAタグ(作成者)

5種類の METAタグのうち、必要なものだけを設定することができます。
※ 設定していない項目については、XOOPS の一般設定で設定した値が適用されます。

【XOOPS_TRUST_PATH/cache/ ディレクトリについて】
「METAタグ管理」で設定した METAタグの内容は、DB への保存に加え、キャッシュファイルに格納されます。

通常使用時は、このキャッシュファイルを利用することで、DB へのアクセスを軽減できる仕様にしています。

なお、キャッシュファイルは XOOPS_TRUST_PATH/cache/ ディレクトリに保存されます。

XOOPS_TRUST_PATH/cache/ をまだ作っていない場合は、必ず作ったうえで、お使いください。

※ パーミッションを 777 にするなど、書込を許可する設定にしてください。

【METAタグフックブロックについて】
モジュール毎に設定した METAタグは、「METAタグフックブロック」を設定したページにのみ反映されます。

※ 「METAタグ管理」で設定すれば、すぐに実際のページに反映されるわけではありません。
※ ブロック管理で、必ず「METAタグフックブロック」を設定したうえで、お使いください。

【トップページの METAタグについて】
このモジュールで設定できるのは、モジュール毎の METAタグのみです。
トップページの METAタグについては、編集・設定することはできません。

トップページの METAタグについては、

- XOOPS Cube Legacy 2.1 の場合は、「互換レンダーシステム  > 一般設定」

- XOOPS 2.0 の場合は、「サイト一般設定  > METAタグ/フッタ設定」

で設定した値がそのまま適用されます。

【外部スクリプトタグ編集について】
「外部スクリプトタグ編集」は、theme.htmlのhead内に外部スクリプトに必要なタグを挿入することができる機能です。

なお、セキュリティ上の問題になっても困りますので、編集・設定できるのは XOOPS URL 以下にあるスクリプトのみに限定しています。

また、「外部スクリプトタグ編集」で編集・設定した内容は、「SCRIPTタグフックブロック」を設定したページにのみ反映されます。

※ 「外部スクリプトタグ編集」で編集・設定すれば、すぐに実際のページに反映されるわけではありません。
※ ブロック管理で、必ず「SCRIPTタグフックブロック」を設定したうえで、お使いください。


【更新履歴】
1.20 2008-2-28
- 操作性向上のため、altsys と類似のインターフェースとテンプレート編集機能を実装

1.10 2008-2-24
- 「CSSインポート」で、defaultに加え、選択したテンプレートセットに同時に保存できるよう修正
- テンプレートセット間でのテンプレートコピー機能を追加
- 不要になったテンプレートを削除できる機能を追加
- テンプレートのダウンロード機能を追加
- 一部のページで Notice が出ていたのを修正

1.00a 2008-2-20
- 「CSSインポート」で、同名のテンプレートがDBにある場合、テンプレートの内容を自動的に更新するように修正

1.00 2008-2-19 ※要モジュールアップデート
- CSSファイルを DBテンプレートとしてインポートする機能を追加
- テンプレート毎のエクスポート先ディレクトを保存できるように修正

0.90a 2008-2-17
- 「外部スクリプトタグ編集」の「別データとして保存」の動作がおかしかったバグを修正
- 「METAタグ管理」にページナビを追加

0.90 2008-2-17 ※要モジュールアップデート
- theme.htmlのhead内に外部スクリプトに必要なタグを挿入することができる機能を追加
- 「SCRIPTタグフックブロック」を追加
- 一般設定で、ファイルキャッシュを保存するかどうか選択できるように修正
- XOOPS_TRUST_PATH/cache/ などが見つからない場合、警告表示が出るよう修正
- 一部のページで GTicket を正常に使えていなかったバグを修正

0.80 2008-2-13
- DBに保存した CSSテンプレートを CSSファイルとしてエクスポートする機能を追加

0.70a 2008-2-11
- METAタグ用のデータをキャッシュで保存し、DBへのアクセスを軽減するよう修正

0.70 2008-2-11 ※要モジュールアップデート
- モジュール毎に METAタグを設定できる「METAタグ管理」を追加
- 「METAタグフックブロック」を追加

0.60 2008-2-9 ※要モジュールアップデート
- ブロックオプションで linkタグの media属性を選択できるよう修正

0.50 2008-2-7
- ブロックオプションの「このブロックのテンプレート」をより簡単に選択できるよう修正

0.40 2008-2-5
- ブロックオプションで、xoops_block_header へのアサインを選択できるよう修正

0.30 2008-2-4 ※要モジュールアップデート
- 一般設定に「デフォルトにするテンプレート名」を追加
- DBスタイルシートフックブロックを追加

0.20 2008-2-3 ※要モジュールアップデート
- ブロックオプションを追加

0.10 2008-2-2
- this new file