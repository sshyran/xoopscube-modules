<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
Xigg/library/Xigg/Model/CommentForm.php
*/
class Xigg_Model_CommentFormBase extends Sabai_Model_EntityForm
{
    function onInit($params)
    {
        require_once 'Sabai/Form/Element/InputText.php';
        $this->addElement(new Sabai_Form_Element_InputText('title', 80, 255), _('Title'));
        require_once 'Sabai/Form/Element/SelectDropdown.php';
        $this->addElement(new Sabai_Form_Element_SelectDropdown('content_syntax', 1, false), _('Content syntax'));
        require_once 'Sabai/Form/Element/Textarea.php';
        $this->addElement(new Sabai_Form_Element_Textarea('body', 10, 70), _('Body'));
        require_once 'Sabai/Form/Element/Textarea.php';
        $this->addElement(new Sabai_Form_Element_Textarea('body_html', 10, 70), _('Body html'));
        require_once 'Sabai/Form/Element/SelectYesNo.php';
        $this->addElement(new Sabai_Form_Element_SelectYesNo('allow_edit', _('Yes'), _('No')), _('Allow edit'));
        require_once 'Sabai/Form/Element/SelectEntity.php';
        $element =& new Sabai_Form_Element_SelectEntity($this->_model, 'Node', 'Node', 1);
        $this->addElement($element, _('node'));
        require_once 'Sabai/Form/Element/SelectTreeEntity.php';
        $element =& new Sabai_Form_Element_SelectTreeEntity($this->_model, 'Comment', 'Parent', 1, ' - ');
        $this->addElement($element, _('Parent comment'));
        require_once 'Sabai/Form/Element/InputText.php';
        $this->addElement(new Sabai_Form_Element_InputText('userid', 30, 255), _('User ID'));
        $this->_onInit($params);
    }

    function onEntity(&$entity)
    {
        if ($this->hasElement('title')) {
            $this->setValueFor('title', $entity->getVar('title'));
        }
        if ($this->hasElement('content_syntax')) {
            $this->setValueFor('content_syntax', $entity->getVar('content_syntax'));
        }
        if ($this->hasElement('body')) {
            $this->setValueFor('body', $entity->getVar('body'));
        }
        if ($this->hasElement('body_html')) {
            $this->setValueFor('body_html', $entity->getVar('body_html'));
        }
        if ($this->hasElement('allow_edit')) {
            $this->setValueFor('allow_edit', $entity->getVar('allow_edit'));
        }
        if ($this->hasElement('Node')) {
            $this->setValueFor('Node', $entity->getVar('node_id'));
        }
        if ($this->hasElement('Parent')) {
            $this->setValueFor('Parent', $entity->getVar('parent'));
        }
        if ($this->hasElement('userid')) {
            $this->setValueFor('userid', $entity->getVar('userid'));
        }
        $this->_onEntity($entity);
    }

    function onFillEntity(&$entity)
    {
        $vars = array();
        foreach (array('title' => 'title', 'content_syntax' => 'content_syntax', 'body' => 'body', 'body_html' => 'body_html', 'allow_edit' => 'allow_edit', 'node_id' => 'Node', 'parent' => 'Parent', 'userid' => 'userid') as $var_name => $form_name) {
            if ($this->hasElement($form_name)) {
                $vars[$var_name] = $this->getValueFor($form_name);
            }
        }
        $entity->setVars($vars);
        $this->_onFillEntity($entity);
    }

    function _onInit($params){}
    function _onEntity(&$entity){}
    function _onFillEntity(&$entity){}
}