<?php
/*
This file has been generated by the Sabai scaffold script. Do not edit this file directly.
If you need to customize the class, use the following file:
Xigg/library/Xigg/Model/PluginForm.php
*/
class Xigg_Model_PluginFormBase extends Sabai_Model_EntityForm
{
    function onInit($params)
    {
        require_once 'Sabai/Form/Element/Text.php';
        $this->addElement(new Sabai_Form_Element_Text('name'), _('Name'));
        require_once 'Sabai/Form/Element/Text.php';
        $this->addElement(new Sabai_Form_Element_Text('version'), _('Version'));
        require_once 'Sabai/Form/Element/SelectYesNo.php';
        $this->addElement(new Sabai_Form_Element_SelectYesNo('active', _('Yes'), _('No')), _('Active'));
        require_once 'Sabai/Form/Element/Text.php';
        $this->addElement(new Sabai_Form_Element_Text('params'), _('Params'));
        require_once 'Sabai/Form/Element/InputText.php';
        $this->addElement(new Sabai_Form_Element_InputText('priority', 6, 255), _('Priority'));
        require_once 'Sabai/Form/Element/Text.php';
        $this->addElement(new Sabai_Form_Element_Text('locked'), _('Locked'));
        $this->_onInit($params);
    }

    function onEntity(&$entity)
    {
        if ($this->hasElement('name')) {
            $this->setValueFor('name', $entity->getVar('name'));
        }
        if ($this->hasElement('version')) {
            $this->setValueFor('version', $entity->getVar('version'));
        }
        if ($this->hasElement('active')) {
            $this->setValueFor('active', $entity->getVar('active'));
        }
        if ($this->hasElement('params')) {
            $this->setValueFor('params', $entity->getVar('params'));
        }
        if ($this->hasElement('priority')) {
            $this->setValueFor('priority', $entity->getVar('priority'));
        }
        if ($this->hasElement('locked')) {
            $this->setValueFor('locked', $entity->getVar('locked'));
        }
        $this->_onEntity($entity);
    }

    function onFillEntity(&$entity)
    {
        $vars = array();
        foreach (array('name' => 'name', 'version' => 'version', 'active' => 'active', 'params' => 'params', 'priority' => 'priority', 'locked' => 'locked') as $var_name => $form_name) {
            if ($this->hasElement($form_name)) {
                $vars[$var_name] = $this->getValueFor($form_name);
            }
        }
        $entity->setVars($vars);
        $this->_onFillEntity($entity);
    }

    function _onInit($params){}
    function _onEntity(&$entity){}
    function _onFillEntity(&$entity){}
}